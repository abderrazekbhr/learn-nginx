#number of worker_processes that will treat requests from clients(more workers more requests can be handled simultaneously)
#auto means nginx will automatically detect the number of available CPU cores and set the number of worker processes accordingly
#number of cores of CPU
worker_processes auto;


#general connection processing settings
events {
    #maximum number of simultaneous connections that can be opened by a worker process
    #when we increase the numbers of worker_connections more clients can be served simultaneously but that consummes more system resources (memory)  
    worker_connections 1024;
}

#http traffic handling settings
#we define were nginx will listen what domain and subdomains will accept
http {
    #include the types of files that nginx will serve
    include       mime.types;


    #define our servers that will handle requests forwarded by nginx
    upstream backend_server {
        #define the servers and the way to distribute the requests between them
        #round robin method is default one and it distributes requests evenly across all servers
        least_conn; #this method distributes requests to the server with the least number of active connections
        server 127.0.0.1:3000;
        server 127.0.0.1:3001;
        server 127.0.0.1:3002;
    }
    
    #define a server nginx block to handle requests for a specific domain or subdomain
    server{
        listen 8080;
        server_name localhost;
        location / {
            #configure our nginx to be a proxy that forwards requests to another server
            #http://{upstream_name}
            proxy_pass http://backend_server;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }
    }
}

#mail traffic handling settings
mail{

}

#stream traffic handling settings
stream{

}


#Note
#Directive like `worker_processes`, `listen` mean that we are setting a specific configuration option key value pair
#Block Context  `events{}` `http{}` mean that we are defining a context that can contain other directives or blocks